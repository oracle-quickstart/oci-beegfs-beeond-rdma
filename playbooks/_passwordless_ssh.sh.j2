#!/bin/bash

set -x

cd /root/.ssh/

# since for Cluster Networking - the ansible already does passwordless ssh for opc and root, this script only requires to copy the id_rsa from opc to root user and permit root login.
cp /home/opc/.ssh/id_rsa /root/.ssh/id_rsa
cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup
sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config

mv /root/.ssh/authorized_keys /root/.ssh/authorized_keys.backup
cp /home/opc/.ssh/authorized_keys /root/.ssh/authorized_keys



if [ ! -f ~/.ssh/known_hosts ]; then
  touch ~/.ssh/known_hosts
fi

do_ssh_keyscan () {
  if [ -z `ssh-keygen -F $host` ]; then
    ssh-keyscan -H $host > /tmp/keyscan
    cat /tmp/keyscan | grep "ssh-rsa"
    while [ $? -ne 0 ]; do
      sleep 10s;
      ssh-keyscan -H $host > /tmp/keyscan
      cat /tmp/keyscan | grep "ssh-rsa"
    done;
    ssh-keyscan -H $host >> ~/.ssh/known_hosts
  fi
}

### passwordless ssh setup
for host_fqdn in `cat /home/opc/nodefile.rdma` ; do
  host=$host_fqdn
  do_ssh_keyscan
# host=${host_fqdn%%.*}
# do_ssh_keyscan
#  host_ip=`nslookup $host_fqdn | grep "Address: " | gawk '{print $2}'`
#  host=$host_ip
#  do_ssh_keyscan
done ;



### passwordless ssh setup
for host_fqdn in `cat /home/opc/nodefile.tcp` ; do
  host=$host_fqdn
  do_ssh_keyscan
# host=${host_fqdn%%.*}
# do_ssh_keyscan
#  host_ip=`nslookup $host_fqdn | grep "Address: " | gawk '{print $2}'`
#  host=$host_ip
#  do_ssh_keyscan
done ;



